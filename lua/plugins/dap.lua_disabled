return {
  "mfussenegger/nvim-dap",
  dependencies = {
    {
      "mxsdev/nvim-dap-vscode-js",
      opts = {
        debugger_path = vim.fn.stdpath("data") .. "/lazy/vscode-js-debug",
        adapters = { "pwa-node", "node-terminal" },
      },
    },
    "rcarriga/nvim-dap-ui", -- Optional UI
    "nvim-neotest/nvim-nio",
  },
  config = function()
    require("dapui").setup()
    local dap = require("dap")
    local dap_vscode = require("dap-vscode-js")

    dap_vscode.setup({
      debugger_path = vim.fn.stdpath("data") .. "/lazy/vscode-js-debug",
      adapters = { "pwa-node" },
    })

    dap.adapters["pwa-node"] = {
      type = "server",
      host = "localhost",
      port = "9229",
      executable = {
        command = "node",
        args = {
          vim.fn.stdpath("data") .. "/lazy/vscode-js-debug/out/src/debugServerMain.js",
          "9229",
        },
      },
    }
    dap.adapters["node-terminal"] = {
      type = "server",
      host = "127.0.0.1",
      port = "9229", -- Required for a server-based adapter
      executable = {
        command = "node",
        args = {
          vim.fn.stdpath("data") .. "/lazy/vscode-js-debug/out/src/debugServerMain.js",
          "9229",
        },
      },
    }

    dap.configurations.javascript = {
      {
        type = "pwa-node",
        request = "launch",
        name = "Launch Node.js",
        program = "${file}",
        cwd = vim.fn.getcwd(),
        sourceMaps = true,
        protocol = "inspector",
        console = "integratedTerminal",
      },
      {
        type = "pwa-node",
        request = "attach",
        name = "Attach to process",
        processId = require("dap.utils").pick_process,
        cwd = vim.fn.getcwd(),
        sourceMaps = true,
        protocol = "inspector",
      },
      {
        type = "node-terminal", -- Add this configuration
        request = "launch",
        name = "Run in Debug Terminal",
        cwd = vim.fn.getcwd(),
        command = "node",
        args = { "${file}" },
      },
    }
    dap.configurations.typescript = {
      {
        type = "pwa-node",
        request = "launch",
        name = "Launch TypeScript File",
        program = "${file}",
        cwd = vim.fn.getcwd(),
        sourceMaps = true,
        protocol = "inspector",
        runtimeExecutable = "node",
        runtimeArgs = { "--loader=ts-node/esm" },
        console = "integratedTerminal",
      },
      {
        type = "pwa-node",
        request = "attach",
        name = "Attach to Running TypeScript Process",
        processId = require("dap.utils").pick_process,
        cwd = vim.fn.getcwd(),
        sourceMaps = true,
        protocol = "inspector",
      },
    }
  end,
}
